// Generated by CoffeeScript 1.6.1
/*
Save article, triggle when click the save btn, or press Ctrl-S
*/

var adjustHeight, saveArticle;

saveArticle = function() {
  var article, articleId;
  article = {
    enTitle: $('.en-title').text(),
    cnTitle: $('.cn-title').text(),
    url: $('.url').text(),
    abstract: $('.abstract').text(),
    paraList: []
  };
  $('.para').each(function() {
    return article.paraList.push({
      en: $(this).find('.en').text().trim(),
      cn: $(this).find('.cn').text().trim(),
      type: $(this).data('type'),
      state: false
    });
  });
  articleId = $('.title').data('article-id');
  return $.ajax({
    url: "/article/" + articleId + "/edit",
    method: 'POST',
    data: {
      article: article
    },
    success: function(data) {
      if (data.result === 1) {
        return alert('saved');
      }
    }
  });
};

/*
Dynamic change the height of the divider bar
*/


adjustHeight = function(para) {
  var cnHeight, dvHeight, enHeight;
  enHeight = para.find('.en').height();
  cnHeight = para.find('.cn').height();
  dvHeight = enHeight > cnHeight ? enHeight : cnHeight;
  return para.find('.ec-divider').css({
    height: dvHeight + 15 + 'px'
  });
};

$(function() {
  var classList, clickItem;
  $('.para').each(function() {
    return adjustHeight($(this));
  });
  $('.en, .cn').keyup(function() {
    return adjustHeight($(this).parent());
  });
  $('.btn-save').click(saveArticle);
  clickItem = null;
  classList = "type-mheader type-sheader type-text type-quote type-code";
  $('.para').each(function() {
    return $(this)[0].oncontextmenu = function(e) {
      clickItem = $(e.target).parents('.para').first()[0];
      e.preventDefault();
      return $('.context-menu').css({
        top: e.clientY + 2 + 'px',
        left: e.clientX + 2 + 'px',
        display: 'block'
      });
    };
  });
  $(document).click(function() {
    return $('.context-menu').hide();
  });
  return $('.context-menu').click(function(e) {
    var c;
    c = $(e.target).attr('class');
    switch (c) {
      case 'mheader':
      case 'sheader':
      case 'text':
      case 'quote':
      case 'code':
        $(clickItem).removeClass(classList).addClass("type-" + c);
        return $(clickItem).attr('data-type', c);
      case 'add-para':
        $(clickItem).after("<textarea class='add-content-wap' rows=5></textarea>");
        return $('.add-content-wap').focus().blur(function() {
          var a, addContent, html, _i, _len;
          addContent = $(this).val().split('\n');
          html = "";
          for (_i = 0, _len = addContent.length; _i < _len; _i++) {
            a = addContent[_i];
            if (a !== "") {
              html += "<div data-type='text' class='para type-text'>\n  <div class='en' contenteditable=true>" + a + "</div\n  ><div class='ec-divider'></div\n  ><div class='cn' contenteditable=true></div>\n</div>";
            }
          }
          $(clickItem).after(html);
          $(this).detach();
          return adjustHeight($(clickItem).next());
        });
      case 'remove-para':
        return $(clickItem).detach();
    }
  });
});
